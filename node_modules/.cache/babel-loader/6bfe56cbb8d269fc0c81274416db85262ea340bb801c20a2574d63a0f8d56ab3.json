{"ast":null,"code":"const GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\nexport const searchUsers = async text => {\n  const params = new URLSearchParams({\n    q: text\n  });\n  const response = await fetch(`${GITHUB_URL}/search/users?${params}`, {\n    headers: {\n      Authorization: `token ${GITHUB_TOKEN}`\n    }\n  });\n  const {\n    items\n  } = await response.json();\n  return items;\n};\nexport const getUser = async login => {\n  const response = await fetch(`${GITHUB_URL}/users/${login}`, {\n    headers: {\n      Authorization: `token ${GITHUB_TOKEN}`\n    }\n  });\n  if (response.status === 404) {\n    window.location = '/notfound';\n  } else {\n    const data = await response.json();\n    return data;\n  }\n};\nexport const getRepos = async login => {\n  const params = new URLSearchParams({\n    sort: 'created',\n    per_page: 8\n  });\n  const response = await fetch(`${GITHUB_URL}/users/${login}/repos?${params}`, {\n    headers: {\n      Authorization: `token ${GITHUB_TOKEN}`\n    }\n  });\n  const data = await response.json();\n  return data;\n};","map":{"version":3,"names":["GITHUB_URL","process","env","REACT_APP_GITHUB_URL","GITHUB_TOKEN","REACT_APP_GITHUB_TOKEN","searchUsers","text","params","URLSearchParams","q","response","fetch","headers","Authorization","items","json","getUser","login","status","window","location","data","getRepos","sort","per_page"],"sources":["/Users/satishjagadish/Desktop/React Applications/github_finder/src/context/GithubActions.js"],"sourcesContent":["const GITHUB_URL= process.env.REACT_APP_GITHUB_URL\nconst GITHUB_TOKEN= process.env.REACT_APP_GITHUB_TOKEN\nexport const searchUsers=async(text)=>{\n\n    const params =new URLSearchParams({\n        q:text\n    })\nconst response=await fetch(`${GITHUB_URL}/search/users?${params}`,\n{headers: {\n    Authorization:`token ${GITHUB_TOKEN}`\n},\n})\nconst {items}=await response.json()\n\nreturn items\n\n}\n\n\nexport const getUser=async(login)=>{\n\nconst response=await fetch(`${GITHUB_URL}/users/${login}`,\n{headers: {\n    Authorization:`token ${GITHUB_TOKEN}`\n}})\n\nif(response.status===404){\n    window.location='/notfound'\n}\nelse {\n    const data=await response.json()\n return data\n}\n}\n\nexport const getRepos=async(login)=>{\n \nconst params =new URLSearchParams({\n    sort:'created',\n    per_page:8\n})\n\nconst response=await fetch(`${GITHUB_URL}/users/${login}/repos?${params}`,\n{headers: {\n    Authorization:`token ${GITHUB_TOKEN}`\n}\n})\nconst data=await response.json()\n\nreturn data\n\n}\n"],"mappings":"AAAA,MAAMA,UAAU,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAoB;AAClD,MAAMC,YAAY,GAAEH,OAAO,CAACC,GAAG,CAACG,sBAAsB;AACtD,OAAO,MAAMC,WAAW,GAAC,MAAMC,IAAI,IAAG;EAElC,MAAMC,MAAM,GAAE,IAAIC,eAAe,CAAC;IAC9BC,CAAC,EAACH;EACN,CAAC,CAAC;EACN,MAAMI,QAAQ,GAAC,MAAMC,KAAK,CAAE,GAAEZ,UAAW,iBAAgBQ,MAAO,EAAC,EACjE;IAACK,OAAO,EAAE;MACNC,aAAa,EAAE,SAAQV,YAAa;IACxC;EACA,CAAC,CAAC;EACF,MAAM;IAACW;EAAK,CAAC,GAAC,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAEnC,OAAOD,KAAK;AAEZ,CAAC;AAGD,OAAO,MAAME,OAAO,GAAC,MAAMC,KAAK,IAAG;EAEnC,MAAMP,QAAQ,GAAC,MAAMC,KAAK,CAAE,GAAEZ,UAAW,UAASkB,KAAM,EAAC,EACzD;IAACL,OAAO,EAAE;MACNC,aAAa,EAAE,SAAQV,YAAa;IACxC;EAAC,CAAC,CAAC;EAEH,IAAGO,QAAQ,CAACQ,MAAM,KAAG,GAAG,EAAC;IACrBC,MAAM,CAACC,QAAQ,GAAC,WAAW;EAC/B,CAAC,MACI;IACD,MAAMC,IAAI,GAAC,MAAMX,QAAQ,CAACK,IAAI,CAAC,CAAC;IACnC,OAAOM,IAAI;EACZ;AACA,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAC,MAAML,KAAK,IAAG;EAEpC,MAAMV,MAAM,GAAE,IAAIC,eAAe,CAAC;IAC9Be,IAAI,EAAC,SAAS;IACdC,QAAQ,EAAC;EACb,CAAC,CAAC;EAEF,MAAMd,QAAQ,GAAC,MAAMC,KAAK,CAAE,GAAEZ,UAAW,UAASkB,KAAM,UAASV,MAAO,EAAC,EACzE;IAACK,OAAO,EAAE;MACNC,aAAa,EAAE,SAAQV,YAAa;IACxC;EACA,CAAC,CAAC;EACF,MAAMkB,IAAI,GAAC,MAAMX,QAAQ,CAACK,IAAI,CAAC,CAAC;EAEhC,OAAOM,IAAI;AAEX,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}